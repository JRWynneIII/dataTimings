#!/bin/bash
#PBS -A stf007int
#PBS -N dataTransferTimings
#PBS -j oe
#PBS -l walltime=2:00:00
#PBS -l nodes=1


export TIMEFORMAT='%3R'
TIMEFILE="time.log"
SMALLFILE="smallFile.dat"
MEDFILE="midFile.dat"
BIGFILE="biggerfile.dat"
AVGHSI=0
AVGHTAR=0
I=0
declare -a files=($SMALLFILE $MEDFILE $BIGFILE)
COUNTER=0
INTCOUNTER=0

cd $MEMBERWORK/stf007/dataTiming
rm time.log
touch time.log
DATE=$(date +%s)
SUFFIX="batch.log"
TIMEFILE="time/$DATE$SUFFIX"
touch $TIMEFILE

function clean {
  hsi rm smallFile.dat 2> /dev/null
  hsi rm midFile.dat 2> /dev/null
  hsi rm biggerFile.dat 2> /dev/null
  hsi rm file.tar 2> /dev/null
  hsi rm 1TB.dat 2> /dev/null
  hsi rm file.tar.idx 2> /dev/null
}

echo "HSI from Batch node:" >> $TIMEFILE
while [ $COUNTER -lt 3 ] ; do
  while [ $INTCOUNTER -lt 3 ] ; do
    clean
    echo "HSI ${files[$COUNTER]} on Batch Node"
    I=$( { time $(hsi put ${files[$COUNTER]} 2> /dev/null); } 2>&1 )
    echo "Test $INTCOUNTER for ${files[$COUNTER]} With HSI on Batch Node" >> $TIMEFILE
    echo $I >> $TIMEFILE
    hsi rm ${files[$COUNTER]} 2> /dev/null
    AVGHSI=$(echo $AVGHSI + $I | bc)
    clean
    echo "HTAR ${files[$COUNTER]} on Batch Node"
    I=$( { time htar -cvf file.tar ${files[$COUNTER]} >> /dev/null; } 2>&1 )
    echo "Test $INTCOUNTER for ${files[$COUNTER]} With HTAR on Batch Node" >> $TIMEFILE
    echo $I >> $TIMEFILE
    AVGHTAR=$(echo $AVGHTAR + $I | bc)
    #Average the time for this cycle
    INTCOUNTER=$(echo $INTCOUNTER + 1 | bc)
  done

  AVGHSI=$(echo $AVGHSI / 3 | bc -l)
  AVGHTAR=$(echo $AVGHTAR / 3 |bc -l)
  echo "Average HSI time for ${files[$COUNTER]} after 3 iterations on Batch Node:"
  echo $AVGHSI 
  echo "Average HSI for ${files[$COUNTER]}"
  echo $AVGHSI
  echo "Average HTAR time for ${files[$COUNTER]} after 3 iterations on Batch Node:"
  echo $AVGHTAR
  echo "Average HTAR for ${files[$COUNTER]}"
  echo $AVGHTAR
  AVGHSI=0
  AVGHTAR=0
  INTCOUNTER=0
  I=0
  COUNTER=$(expr $COUNTER + 1)
done
clean
echo "HSI of 1TB.dat on Titan Login Node"
I=$( { time $(hsi put 1TB.dat 2> /dev/null); } 2>&1 )
echo "Test 1 for 1TB.dat with HSI" >> $TIMEFILE
echo $I >> $TIMEFILE
echo $I
I=$( { time $(htar -cVf file.tar 1TB.dat 2> /dev/null); } 2>&1 )
echo "Test 1 for 1TB.dat with HTAR" >> $TIMEFILE
echo $I >> $TIMEFILE
echo $I
